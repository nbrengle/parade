[project]
name = "parade"
version = "0.1.0"
description = "A domain-driven project planning tool"
authors = [{name = "Your Name", email = "you@example.com"}]
readme = "README.md"
requires-python = ">=3.14"
dependencies = [
    "punq>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=4.3.0",
    "ruff>=0.8.6",
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-durations>=1.6.1",
    "hypothesis>=6.122.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
python_version = "3.14"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
warn_unreachable = true
warn_no_return = true
check_untyped_defs = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "punq"
ignore_missing_imports = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812", # Conflicts with formatter
    "TC", # AI agents and TYPE_CHECKING play poorly
]  

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101", "S311", "PLR2004"]
"tests/*.py" = ["S101", "S311", "PLR2004"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
addopts = "-v -W error --cov=. --cov-fail-under=90"
testpaths = ["tests"]

[tool.coverage.run]
omit = [
    "tests/*",
    "*/tests/*",
    "test_*",
    "*/.venv/*",
    "*/venv/*",
    ".venv/*",
    "venv/*",
    "parade/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\b.*:",
    "@(abc\\.)?abstractmethod",
]
